from aiogram.types import (
    KeyboardButton,
    ReplyKeyboardMarkup,
)


def get_contact_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)]
        ],
        resize_keyboard=True,
        one_time_keyboard=True,
    )


def get_main_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [
                KeyboardButton(text="üì∑ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–æ—Ç–æ"),
                KeyboardButton(text="üë§ –ú–æ–π –ø—Ä–æ—Ñ–∏–ª—å"),
                KeyboardButton(text="‚ùì –ü–æ–º–æ—â—å"),
            ],
        ],
        resize_keyboard=True,
    )


def get_location_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üìç –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é", request_location=True)],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
        one_time_keyboard=True,
    )


def get_back_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
    )


def get_photo_type_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="–†–ú–ü_—á–∞–π_–î–û")],
            [KeyboardButton(text="–†–ú–ü_—á–∞–π_–ü–û–°–õ–ï")],
            [KeyboardButton(text="–†–ú–ü_–∫–æ—Ñ–µ_–î–û")],
            [KeyboardButton(text="–†–ú–ü_–∫–æ—Ñ–µ_–ü–û–°–õ–ï")],
            [KeyboardButton(text="–î–ú–ü_–û–†–ò–ú–ò –ö–†")],
            [KeyboardButton(text="–î–ú–ü_–∫–æ–Ω–∫—É—Ä–µ–Ω—Ç")],
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
        one_time_keyboard=True,
    )


def get_photo_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")],
        ],
        resize_keyboard=True,
    )


async def get_dmp_brands_keyboard(brand_type: str) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –±—Ä–µ–Ω–¥–æ–≤ –î–ú–ü

    Args:
        brand_type: "orimi" –¥–ª—è –±—Ä–µ–Ω–¥–æ–≤ –û–†–ò–ú–ò –∏–ª–∏ "competitor" –¥–ª—è –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤

    Returns:
        ReplyKeyboardMarkup: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏ –±—Ä–µ–Ω–¥–æ–≤
    """

    if brand_type == "orimi":
        # –ë—Ä–µ–Ω–¥—ã –û–†–ò–ú–ò
        brands = [
            "Tess",
        ]
    elif brand_type == "competitor":
        # –ë—Ä–µ–Ω–¥—ã –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–æ–≤
        brands = [
            "Beta",
        ]
    else:
        # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        brands = []

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏
    buttons = []
    for brand in brands:
        buttons.append([KeyboardButton(text=brand)])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    buttons.append([KeyboardButton(text="üîô –ù–∞–∑–∞–¥")])

    keyboard = ReplyKeyboardMarkup(
        keyboard=buttons, resize_keyboard=True, one_time_keyboard=True
    )

    return keyboard
